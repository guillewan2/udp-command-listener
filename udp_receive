#!/bin/bash

# Guillermo Torres
# Date: mar 02 sep 2025
# Time: 17:05
# Description: 'Prepares the system to receive messages via UDP and execute commands through them'
# Distribution: Ubuntu 24.04.3 LTS


# Import 'ucl.conf' variables
source ucl.conf

# Check if --prepare is selected
if [[ $1 == "--prepare" ]]; then
    echo "Installing netcat..."
    sudo apt install netcat -y
fi



#  Check if necat is installed 
if ! command -v netcat >/dev/null 2>&1; then
    echo "netcat is not found, please install it with --prepare"
    exit 1
fi

# Check secret key on message
get_key(){
    if [[ "$SECRET" = "" ]]; then
        msg_secret=""
        msg_nosecret=$*
    else
        msg_secret="$1"
        shift
        msg_nosecret="$*"
    fi
}

check_bannedcommand(){
    if [[ "$banned_commands_ON" == "true" ]]; then
    for i in "${banned_commands[@]}"; do
        for arg in "$@"; do
            if [[ "$i" == "$arg" ]]; then
                echo "Banned command used, not executing"
                return 1
            fi
        done
    done
    fi            
}

# N E T C A T 
while true; do
    message=$(timeout 2 nc -u -l $PORT)
        if [[ $message = "" ]]; then
            echo "Nothing received"
        else
            get_key $message
            # Check if msg_secret equals to the secret on ucl.conf
            if [[ "$msg_secret" = "$SECRET" ]]; then
                check_bannedcommand $msg_nosecret
                if [[ $? -eq 1 ]]; then
                    echo
                else
                    echo "-----------------------"
                    echo "-     UDP COMMAND       "
                    echo "-----------------------"
                    echo "- $msg_nosecret "
                    echo "-----------------------"
                    echo "$msg_nosecret with key '$msg_secret' on $(date +'%d/%m/%y')" >> commands.log
                    $($msg_nosecret | tee -a commands.log)
                    echo "---------------------" >> commands.log
                fi
            
            fi
        fi
done

